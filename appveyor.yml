version: '{build}'
skip_tags: true
image: Visual Studio 2019
#need set environment variable or it's not working in cache
#clone_script:
#  - if not exist %APPVEYOR_BUILD_FOLDER% (git clone -q --branch=%APPVEYOR_REPO_BRANCH% https://github.com/craftwar/obs-deps.git)

environment:
  vc_inc_arch: AVX2
  matrix:
    - favor_arch: INTEL64
      cl_cpu_options: -QIntel-jcc-erratum
      ffmpeg_extra_options: --disable-fma4 #no FMA4 on Intel
    - favor_arch: AMD64
      ffmpeg_extra_options: --disable-runtime-cpudetect --disable-avx512 --disable-fma4 #no AVX512 on AMD, no FMA4 on newer AMD CPU?
    - favor_arch: INTEL64
      cl_cpu_options: -QIntel-jcc-erratum
      ffmpeg_extra_options: --disable-fma4
      vc_inc_arch: SSE2
    - favor_arch: AMD64
      ffmpeg_extra_options: --disable-avx512 --disable-fma4
      vc_inc_arch: SSE2
#  APPVEYOR_RDP_PASSWORD:
#    secure: K6XkhLVN7PZDnWWtrTKYneDPMS7FgBFYYe1xuU2s8js=
matrix:
  fast_finish: true

init:
  - ps: if (0) { iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1')) } #rdp debug
install:
#  - mklink /d C:\msys64 C:\tools\msys64
# TODO, remove this when appveyor is ready
#  - choco install msys2 --params="'/InstallDir:C:\msys64 /NoUpdate'"
#  - ps: Restart-Computer
#  - ps: Start-Sleep -s 5  
#  - cmd
  - call script\set_variable.cmd
  - mkdir "%pkg_prefix_win%\bin\" "%pkg_prefix_win%\include\" "%pkg_prefix_win%\lib\pkgconfig"

  - set MSYS2_PATH_TYPE=inherit
  - set MSYSTEM=MINGW64
  - C:\msys64\usr\bin\pacman -Syuu --needed --noconfirm
#  - C:\msys64\usr\bin\pacman -Su --noconfirm
#  - C:\msys64\usr\bin\pacman -S --noconfirm mingw-w64-x86_64-nasm git make pkg-config #mingw-w64-x86_64-zlib zlib mingw-w64-x86_64-pkg-config
# depending on what are preinstalled by Appveyor
  - C:\msys64\usr\bin\pacman -S --noconfirm mingw-w64-x86_64-nasm
  - C:\msys64\usr\bin\pacman -Q
  - git submodule update --init --recursive --remote

  - C:\msys64\usr\bin\bash.exe -lc "cd /c/projects/$APPVEYOR_PROJECT_NAME/ffmpeg; git checkout `git tag --list 'n*' | sed -r '/.+-dev/d' | tail -1`"
#  - call script\update_submodules.cmd
# use same as obs to prevent problem
#  - cd ffmpeg && git checkout ad56e8057d8af0201ed0cb65acc12e5889d4afcc
#  - cd %APPVEYOR_BUILD_FOLDER%\


#  - cmd
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
  # disable /GS (Buffer Security Check) to get better performance
  # -Zc:inline is disabled when -GL is on
  # delay until newer windows sdk is released (c17 is not supported yet)
  #- set cl_options=-MP -Oi -arch:%vc_inc_arch% -Gw -Gy -GL -GS- -Qspectre- -favor:%favor_arch% -Zc:__cplusplus -std:c17 %cl_cpu_options%
  - set cl_options=-MP -Oi -arch:%vc_inc_arch% -Gw -Gy -GL -GS- -Qspectre- -favor:%favor_arch% -Zc:__cplusplus %cl_cpu_options%
  #only works outside development environment
  - set _LINK_=-LTCG
#  - set CL=/arch:AVX2
# LDFLAGS="-LTCG"  /LTCG is implied with /GL.
  - cd zlib
# change dll name from zlib1.dll to zlib.dll (same as Jim's OBS)
  - C:\msys64\usr\bin\sed.exe -i 's/1.dll/.dll/' CMakeLists.txt
  - cmake -E env CFLAGS="%cl_options%" CXXFLAGS="%cl_options%" LDFLAGS="-LTCG" cmake . -G "Visual Studio 16 2019" -A x64 -DCMAKE_SYSTEM_VERSION=10.0 -DCMAKE_INSTALL_PREFIX="%pkg_prefix_win%" -DWITH_NATIVE_INSTRUCTIONS=true -DZLIB_COMPAT=true -DBUILD_SHARED_LIBS=true -DZLIB_ENABLE_TESTS=false
  - call msbuild /m /p:Configuration=Release zlib.vcxproj /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
#  - cmd
  - copy "%APPVEYOR_BUILD_FOLDER%\zlib\Release\zlib.lib" "%pkg_prefix_win%\lib\zlib.lib"
  - copy "%APPVEYOR_BUILD_FOLDER%\zlib\Release\zlib.exp" "%pkg_prefix_win%\lib\zlib.exp"
  - copy "%APPVEYOR_BUILD_FOLDER%\zlib\Release\zlib.dll" "%pkg_prefix_win%\bin\zlib.dll"
  - copy "%APPVEYOR_BUILD_FOLDER%\zlib\zlib.h" "%pkg_prefix_win%\include\zlib.h"
  - copy "%APPVEYOR_BUILD_FOLDER%\zlib\zconf.h" "%pkg_prefix_win%\include\zconf.h"
  - copy "%APPVEYOR_BUILD_FOLDER%\zlib\zlib.pc" "%pkg_prefix_win%\lib\pkgconfig\zlib.pc"
  - cd "%APPVEYOR_BUILD_FOLDER%\libpng"
  - C:\msys64\usr\bin\bash.exe -lc "cd /c/projects/$APPVEYOR_PROJECT_NAME/libpng; git checkout `git tag -l 'v1.[0-9].[0-9][0-9]' | tail -1`"
  # remove cmake version, try to make linker variable work (but fail)
#  - C:\msys64\usr\bin\bash.exe -lc "sed -i '/cmake_minimum_required/d;/cmake_policy(VERSION/d' /c/projects/$APPVEYOR_PROJECT_NAME/libpng/CMakeLists.txt"
#  - C:\msys64\usr\bin\sed.exe -i '/cmake_minimum_required/d;/cmake_policy(VERSION/d' CMakeLists.txt
  - set ZLIBLIB=%pkg_prefix_win%\lib
  - set ZLIBINC=%pkg_prefix_win%\include
  - set CPPFLAGS=-I%ZLIBINC%
  - set LDFLAGS=-LIBPATH:%ZLIBLIB% -LTCG
#  - set LD_LIBRARY_PATH=%ZLIBLIB%:%LD_LIBRARY_PATH%
  - cmake -E env CFLAGS="%cl_options%" CXXFLAGS="%cl_options%" PNG_INTEL_SSE="yes" cmake . -G "Visual Studio 16 2019" -A x64 -DCMAKE_STATIC_LINKER_FLAGS_INIT=/LTCG -DCMAKE_INSTALL_PREFIX=%pkg_prefix_win% -DPNG_TESTS=off -DPNG_SHARED=off
#  - cmd
  - call msbuild /m /p:Configuration=Release INSTALL.vcxproj /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
  - cd ..

#unistd.h. This gets erroneously included when building FFmpeg (msvc)
# tell ffmpeg no this file (-DHAVE_UNISTD_H=0), not working...
  - '"C:\Program Files\Git\usr\bin\sed.exe" -i "/include <unistd.h>/d" %pkg_prefix_mingw%/include/zconf.h'
#  - cd %APPVEYOR_BUILD_FOLDER%\

build_script:
  - set MSYS2_PATH_TYPE=inherit
  - set MSYSTEM=MINGW64
# --bit-depth=8 (not compatible with msvc -GL)  
# --chroma-format=420, 422, 444 (don't need 400 for streaming)
  - C:\msys64\usr\bin\bash.exe -lc "cd /c/projects/$APPVEYOR_PROJECT_NAME/x264; CC=cl ./configure --extra-asflags="-O5" --extra-cflags='%cl_options%' --extra-ldflags='-LTCG' --prefix=\"$pkg_prefix_mingw\" --disable-cli --enable-shared --disable-interlaced --disable-opencl; make -j install"
  - copy "%pkg_prefix_win%\lib\libx264.dll.lib" "%pkg_prefix_win%\lib\x264.lib"
  - copy "%pkg_prefix_win%\lib\libx264.dll.lib" "%pkg_prefix_win%\lib\libx264.lib"
#  - C:\msys64\usr\bin\bash.exe -lc "cp /c/msys64/mingw64/lib/pkgconfig/libpng*.pc $pkg_prefix_mingw/lib/pkgconfig"
  - C:\msys64\usr\bin\bash.exe -lc "make -C /c/projects/$APPVEYOR_PROJECT_NAME/ffnvcodec install PREFIX=$pkg_prefix_mingw"
#  - C:\msys64\usr\bin\bash.exe -lc "/c/projects/$APPVEYOR_PROJECT_NAME/script/ffmpeg_patch_pl.sh"
  - C:\msys64\usr\bin\bash.exe -lc "/c/projects/$APPVEYOR_PROJECT_NAME/script/ffmpeg_compile.sh"
  - cd "C:\projects\\%APPVEYOR_PROJECT_NAME%\packages\"
  - 7z a "C:\projects\\%APPVEYOR_PROJECT_NAME%"\VCdeps.7z -mx=9 -myx=9 "%pkg_prefix_win%"
  - cd ..
test: off
before_deploy:
  - ps: Push-AppveyorArtifact "VCdeps.7z" -FileName "VCdeps-${Env:favor_arch}-${Env:vc_inc_arch}.7z"
  - ps: $Env:release = Get-Date -UFormat "%Y-%m-%d / %A / %Z"
cache:
#  - C:\tools\vcpkg\installed\
#  - '%pkg_prefix_win% -> appveyor.yml'
#  - '%APPVEYOR_BUILD_FOLDER%' -> appveyor.yml
#  - ffmpeg -> appveyor.yml
#  - x264 -> appveyor.yml
deploy:
  - provider: GitHub
    tag: git
    release: $(release)
    description: Release title = build time
    auth_token:
      secure: KxeGOEgx0+XWdjLWDsyhC+B/w3m8zpvtVY/e+90lCLZgd/2VSuraPZDxdIPB5rfY
    force_update: true
    on:
      branch: master
